
/**
 * @fileOverview Type definitions and Zod schemas for the AI-powered AR Preview feature.
 */
import { z } from 'genkit';

export const AiArPreviewInputSchema = z.object({
  landmarkName: z.string().min(3, { message: "Landmark name must be at least 3 characters." })
    .describe('The name of the landmark or place for the AR preview.'),
  photoDataUri: z.string().optional()
    .describe("Optional: A user-uploaded photo of the landmark as a data URI. Expected format: 'data:<mimetype>;base64,<encoded_data>'."),
  // currentTimeInfo: z.string().optional().describe("Contextual information about the current time, e.g., 'Morning', 'Evening', 'Weekday Afternoon'. This will be set by the flow."),
});
export type AiArPreviewInput = z.infer<typeof AiArPreviewInputSchema>;

export const AiArPreviewOutputSchema = z.object({
  sceneDescription: z.string().describe('A vivid description of the landmark as if viewed through AR at the current time, incorporating mood and activity.'),
  moodTags: z.array(z.string()).describe('Tags describing the current mood or ambiance of the scene (e.g., "Bustling", "Peaceful", "Romantic").'),
  activityTags: z.array(z.string()).describe('Tags suggesting activities suitable for the current scene (e.g., "Photography", "People Watching", "Quiet Reflection").'),
  optimalPhotoTime: z.string().optional().describe('AI-suggested best time of day or conditions for taking photos at this landmark.'),
  generatedImageUri: z.string().optional().describe("A data URI of an AI-generated image representing the landmark if no user photo was provided. Expected format: 'data:image/png;base64,<encoded_data>'."),
  generatedImagePrompt: z.string().optional().describe("The prompt used if an image was generated by AI. For debugging or display.")
});
export type AiArPreviewOutput = z.infer<typeof AiArPreviewOutputSchema>;

